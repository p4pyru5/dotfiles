

call plug#begin('~/.config/nvim/plugged')

" Make sure you use single quotes

" colorschemes
Plug 'chriskempson/base16-vim'

Plug 'vim-airline/vim-airline' " fancy statusline
Plug 'vim-airline/vim-airline-themes' " themes for vim-airline



" Add plugins to &runtimepath
call plug#end()






" Abkürzungen, nützlich, wenn man sich verschreibt
abbr funciton function
abbr teh the
abbr tempalte template
abbr fitler filter


set nocompatible " not compatible with vi
set autoread " detect when a file is changed


" set a map leader for more key combos
let mapleader = ','
let g:mapleader = ','


" Tab control
set noexpandtab 	" insert tabs rather than spaces for <Tab>
set smarttab 		" tab respects 'tabstop', 'shiftwidth', and 'softtabstop'
set tabstop=4 		" the visible width of tabs
set softtabstop=4 	" edit as if the tabs are 4 characters wide
set shiftwidth=4 	" number of spaces to use for indent and unindent
set shiftround 		" round indent to a multiple of 'shiftwidth'
set completeopt+=longest


" faster redrawing
set ttyfast


" ----------------------------------------------------------------------
"           _                                           
"          /_\  _ __ _ __  ___ _ _ ___ __ _ _ _  __ ___ 
"         / _ \| '_ \ '_ \/ -_) '_/ -_) _` | ' \/ _/ -_)
"        /_/ \_\ .__/ .__/\___|_| \___\__,_|_||_\__\___|
"              |_|  |_|                                 
" ----------------------------------------------------------------------

set encoding=utf8

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if (&t_Co > 2 || has("gui_running")) && !exists("syntax_on")
  syntax on
endif


" Explicitly tell vim that the terminal supports 256 colors"
"set t_Co=256
"let g:solarized_termcolors=256
"let $NVIM_TUI_ENABLE_TRUE_COLOR=1

let base16colorspace=256  " Access colors present in 256 colorspace"
set background=light
colorscheme solarized






" --------------------------------
" airline options
" Airline status bar. Wichtig pacman -Sy powerline-fonts
let g:airline_powerline_fonts = 1
if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif
let g:airline_symbols.space = "\ua0"
let g:airline_theme='solarized'
let g:airline_solarized_bg='dark'
"let g:airline_theme='murmur'

" smart tab bar
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#left_alt_sep = '|'


"let g:airline_left_sep=''
"let g:airline_right_sep=''






" ----------------------------------------------------------------------
"  __  __         _          _                        _                                         
" |  \/  |_____ _(_)_ _     /_\  _ _ ___ _  _ _ _  __| |                                        
" | |\/| / _ \ V / | ' \   / _ \| '_/ _ \ || | ' \/ _` |                                        
" |_| _|_\___/\_/|_|_||_| /_/_\_\_| \___/\_,_|_||_\__,_|          _____       __  __            
"    |_   _|_ _| |__ ___ / /\ \    / (_)_ _  __| |_____ __ _____ / / _ )_  _ / _|/ _|___ _ _ ___
"      | |/ _` | '_ (_-</ /  \ \/\/ /| | ' \/ _` / _ \ V  V (_-</ /| _ \ || |  _|  _/ -_) '_(_-<
"      |_|\__,_|_.__/__/_/    \_/\_/ |_|_||_\__,_\___/\_/\_//__/_/ |___/\_,_|_| |_| \___|_| /__/
" ----------------------------------------------------------------------

set so=7 " set 7 lines to the cursors - when moving vertical


" -------------------------------
" Always show one line below/above when scrolling
if !&scrolloff
  set scrolloff=3
endif
if !&sidescrolloff
  set sidescrolloff=5
endif
set display+=lastline
